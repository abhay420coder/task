---
const { transitionName = "", className = "" ,transitionDelay="0ms" ,animationName="noAnimation" ,animationDuration="" , animationIterationCount="" , animationDelay="" } = Astro.props;
---

<div class={transitionName + " transitiona-block " + className} style={"transition-delay: "+ transitionDelay+" ;" + "animation-name: "+ animationName+" ;" + "animation-duration: "+ animationDuration+" ;" + "animation-iteration-count: "+ animationIterationCount+" ;" + "animation-delay: "+ animationDelay+" ;"}>
    <slot />
</div>

<style>
/*
    shorthand to use single/multiple transition effect
    transition: transition-property-1 transition-duration-1 transition-timing-function-1 transition-delay-1 , transition-property-2 transition-duration-2 transition-timing-function-2 transition-delay-2, transition-property-3 transition-duration-3 transition-timing-function-3 transition-delay-3, ....................., transition-property-N transition-duration-N transition-timing-function-N transition-delay-N; 
*/

/*
The .block class sets up the initial state with opacity 0 and a transition.
The .slide-up, .slide-right, .zoom-in, and .zoom-out classes define the initial transformations.
The .show class removes the transformations and sets opacity to 1, triggering the animations.
The .child elements follow the same pattern.
*/

.transitiona-block {
    height: 100%;
    width: 100%;
    /* margin: 20px 0; */
    opacity: 0;
    transition: transform 1s, opacity 1s;
    transition-delay: 100ms;

}
.transitiona-block.show { opacity: 1; }

.transitiona-block.slide-up { transform: translateY(50px); }
.transitiona-block.slide-up.show { transform: translateY(0); }

.transitiona-block.slide-down { transform: translateY(-50px); }
.transitiona-block.slide-down.show { transform: translateY(0); }

.transitiona-block.slide-left { transform: translateX(50px); }
.transitiona-block.slide-left.show { transform: translateX(0); }

.transitiona-block.slide-right { transform: translateX(-50px); }
.transitiona-block.slide-right.show { transform: translateX(0); }

.transitiona-block.zoom-in { transform: scale(0.5); }
.transitiona-block.zoom-in.show { transform: scale(1); }

.transitiona-block.zoom-out { transform: scale(1.5); }
.transitiona-block.zoom-out.show { transform: scale(1); }

.transitiona-block > .child {
    margin: 5px;
    /* width: 30px;
    height: 30px; */
    opacity: 0;
    transition: transform 1s, opacity 1s;
}
.transitiona-block > .child.show { opacity: 1; }


@keyframes shakeY {
  0%, 100% {
    transform: translateY(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateY(-10px);
  }
  20%, 40%, 60%, 80% {
    transform: translateY(10px);
  }
}

@keyframes shakeX {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-10px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(10px);
  }
}


.containers{

@apply 
px-3 
mx-auto 

mobileLand:max-w-[540px] 
tabletPot:max-w-[720px] 
tabletLand:max-w-[960px] 
laptop:max-w-[1140px] 
monitor:max-w-[1320px]

;

  padding-left: 0.75rem;
padding-right: 0.75rem; 
}

@media (min-width: 576px) { 
.containers{
  max-width: 540px;
}

}
@media (min-width: 768px) { 
.containers{
  max-width: 720px;
}

}
@media (min-width: 992px) { 
.containers{
  max-width: 960px;
}

}
@media (min-width: 1200px) { 
.containers{
  max-width: 1140px;
}

}
@media (min-width: 1400px) { 
.containers{
  max-width: 1320px;
}

}
.primary-button {
@apply bg-[#14279b] text-[#fff] py-[12px] px-[29px] ml-[30px] rounded-[50px];
background: #14279b;
padding: 12px 29px;
margin-left: 30px;
border-radius: 50px; 
color: #fff;
}


.primary-button:hover {
color: #fff;
background: #4aa3df;
}
.secondary-button {
font-family: "Raleway", sans-serif;
font-weight: 500;
font-size: 16px;
letter-spacing: 1px;
display: inline-block;
padding: 10px 30px;
border-radius: 50px;
transition: 0.5s;
color: #14279b;
border: 2px solid #14279b;
}


.secondary-button:hover {
background: #14279b;
color: #fff;
}
#heroSection {
width: 100%;
height: 70vh;
/* margin-top: 70px; */
}
.heroSectionH1 {
margin: 0;
font-size: 48px;
font-weight: 700;
line-height: 56px;
color: #14279b;
}
.heroSectionH2 {
color: #484848;
margin: 0;
margin-bottom: 40px;
font-size: 24px;
font-weight: 500;
line-height: 1.2;
}

.clientSection {
background: #f3f9fd;
padding: 10px 0;
text-align: center;
}

.section-title {
font-size: 32px;
font-weight: bold;
text-transform: uppercase;
position: relative;
color: #222222;
}

.section-title::before,
.section-title::after {
content: "";
width: 50px;
height: 2px;
background: #14279b;
display: inline-block;
}

.section-title::before {
margin: 0 15px 10px 0;
}

.section-title::after {
margin: 0 0 10px 15px;
}

.service-box {
padding: 30px;
position: relative;
overflow: hidden;
background: #fff;
box-shadow: 0 0 29px 0 rgba(68, 88, 144, 0.12);
transition: all 0.3s ease-in-out;
border-radius: 8px;
z-index: 1;
}

.service-box::before {
content: "";
position: absolute;
background: #e1f0fa;
right: -60px;
top: -40px;
width: 100px;
height: 100px;
border-radius: 50px;
transition: all 0.3s;
z-index: -1;
}

.service-box:hover::before {
background: #14279b;
right: 0;
top: 0;
width: 100%;
height: 100%;
border-radius: 0px;
}

.service-box .icon {
margin: 0 auto 20px auto;
padding-top: 10px;
display: inline-block;
text-align: center;
border-radius: 50%;
width: 60px;
height: 60px;
background: #14279b;
transition: all 0.3s ease-in-out;
}

.service-box:hover .icon {
background: #fff;
}
.service-box:hover .icon i {
color: #14279b;
}
.service-box .icon i {
font-size: 36px;
line-height: 1;
color: #fff;
}
.service-box .title {
font-weight: 700;
margin-bottom: 15px;
font-size: 18px;
}
.service-box .description {
font-size: 15px;
line-height: 28px;
margin-bottom: 0;
}

.service-box:hover .title,
.service-box:hover .description {
color: #fff;
}

.more-service-box {
@apply border-none pt-40 px-5 pb-5 relative w-full ;
border: 0;
padding: 160px 20px 20px 20px;
position: relative;
width: 100%;
position: relative; 
padding-left: 1.25rem;
padding-right: 1.25rem; 
padding-bottom: 1.25rem; 
padding-top: 10rem; 
border-style: none; 
width: 100%; 
}

.more-service-box-card-body{
/* @apply  w-full z-10 rounded-md  py-[15px] px-[30px] bg-[#f6f6f6]; */

/* box-shadow: 0px 2px 15px rgba(0, 0, 0, 0.1);
transition: background ease-in-out 0.4s;
height: fit-content !important; */
z-index: 10;
background: #f6f6f6;
padding: 15px 30px;
box-shadow: 0px 2px 15px rgba(0, 0, 0, 0.1);
transition: 0.3s;
transition: ease-in-out 0.4s;
border-radius: 5px;
}

.more-service-box-card-title{
font-weight: 700;
text-align: center;
margin-bottom: 15px;
}

.more-service-box-card-title a{
/* @apply ; */
font-size: 20px;
}
.more-service-box-card-text{
color: #5e5e5e;
}

.more-service-box:hover .more-service-box-card-body{
background: #14279b;
}

.more-service-box:hover .more-service-box-card-title , .more-service-box:hover  .more-service-box-card-text{
@apply text-white;
color: white;
}

.more-service-box-card-title a:hover{
@apply text-white;
color: white;
}


@media (max-width: 992px) {
#heroSection {
  flex-direction: column-reverse;
}
.heroSectionImg {
  width: 50%;
}
}
@media (max-width: 768px) {
.heroSectionH1 {
  font-size: 28px;
  line-height: 36px;
}
.heroSectionH2 {
  font-size: 18px;
  line-height: 24px;
  margin-bottom: 30px;
}
}

.form-group {
@apply mb-5;
margin-bottom: 20px;
}

.form-control {
@apply block w-full font-normal 
text-[#212529] bg-[#fff] 
bg-clip-padding border border-solid border-[#ced4da] shadow-none text-sm py-2.5 px-[15px] appearance-none ;
transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;
display: block; 
padding-top: 0.625rem;
padding-bottom: 0.625rem; 
border-width: 1px; 
border-style: solid; 
width: 100%; 
font-size: 0.875rem;
line-height: 1.25rem; 
font-weight: 400; 
background-clip: padding-box; 
appearance: none; 
box-shadow: none; 
color: #212529;
background: #fff;
border-color: #ced4da;

}
</style>
<script>
document.addEventListener("DOMContentLoaded", function() {
    const handleScroll = () => {
        document.querySelectorAll('.transitiona-block').forEach(block => {
            const rect = block.getBoundingClientRect();

            // if block/div come on screen
            if (rect.top < window.innerHeight && rect.bottom > 0) { 
                block.classList.add('show');
                // block.querySelectorAll('.child').forEach(child => {
                //     child.classList.add('show');
                // });
            }

        });
    };

    window.addEventListener('scroll', handleScroll);
    handleScroll(); // Initial check on page load

    return () => window.removeEventListener('scroll', handleScroll);
});

</script>